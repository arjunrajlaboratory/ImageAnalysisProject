services:
  worker-base:
    image: nimbusimage/worker-base:latest
    build:
      context: .
      dockerfile: workers/base_docker_images/Dockerfile.worker_base

  image-processing-base:
    image: nimbusimage/image-processing-base:latest
    build:
      context: .
      dockerfile: workers/base_docker_images/Dockerfile.image_processing_worker_base

  # Annotation workers
  connect_to_nearest:
    build:
      context: .
      dockerfile: ./workers/annotations/connect_to_nearest/Dockerfile
    image: annotations/connect_to_nearest:latest
    depends_on:
      - worker-base
    profiles: ["worker", "annotations"]

  connect_sequential:
    build:
      context: .
      dockerfile: ./workers/annotations/connect_sequential/${DOCKERFILE:-Dockerfile}
    image: annotations/connect_sequential:latest
    profiles: ["worker", "annotations"]

  connect_time_lapse:
    build:
      context: .
      dockerfile: ./workers/annotations/connect_timelapse/Dockerfile
    image: annotations/connect_time_lapse:latest
    depends_on:
      - worker-base
    profiles: ["worker", "annotations"]

  laplacian_of_gaussian:
    build:
      context: .
      dockerfile: ./workers/annotations/laplacian_of_gaussian/${DOCKERFILE:-Dockerfile}
    image: annotations/laplacian_of_gaussian:latest
    profiles: ["worker", "annotations"]

  # Property workers - blobs
  blob_metrics:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/blob_metrics_worker/Dockerfile
    image: properties/blob_metrics:latest
    depends_on:
      - worker-base
    profiles: ["worker", "properties"]

  blob_overlap:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/blob_overlap_worker/${DOCKERFILE:-Dockerfile}
    image: properties/blob_overlap:latest
    profiles: ["worker", "properties"]

  blob_intensity:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/blob_intensity_worker/Dockerfile
    image: properties/blob_intensity:latest
    depends_on:
      - worker-base
    profiles: ["worker", "properties"]

  blob_annulus_intensity:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/blob_annulus_intensity_worker/Dockerfile
    image: properties/blob_annulus_intensity:latest
    depends_on:
      - worker-base
    profiles: ["worker", "properties"]

  blob_colony_two_color_intensity:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/blob_colony_two_color_intensity_worker/${DOCKERFILE:-Dockerfile}
    image: properties/blob_colony_two_color_intensity:latest
    profiles: ["worker", "properties"]

  blob_point_count:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/blob_point_count_worker/Dockerfile
    image: properties/blob_point_count:latest
    depends_on:
      - worker-base
    profiles: ["worker", "properties"]

  # Property workers - connections
  children_count:
    build:
      context: .
      dockerfile: ./workers/properties/connections/children_count_worker/${DOCKERFILE:-Dockerfile}
    image: properties/children_count:latest
    profiles: ["worker", "properties"]

  parent_child:
    build:
      context: .
      dockerfile: ./workers/properties/connections/parent_child_worker/${DOCKERFILE:-Dockerfile}
    image: properties/parent_child:latest
    profiles: ["worker", "properties"]

  # Property workers - points
  point_metrics:
    build:
      context: .
      dockerfile: ./workers/properties/points/point_metrics_worker/${DOCKERFILE:-Dockerfile}
    image: properties/point_metrics:latest
    profiles: ["worker", "properties"]

  point_intensity:
    build:
      context: .
      dockerfile: ./workers/properties/points/point_circle_intensity_worker/${DOCKERFILE:-Dockerfile}
    image: properties/point_intensity:latest
    profiles: ["worker", "properties"]

  point_to_nearest_blob_distance:
    build:
      context: .
      dockerfile: ./workers/properties/points/point_to_nearest_blob_distance/${DOCKERFILE:-Dockerfile}
    image: properties/point_to_nearest_blob_distance:latest
    profiles: ["worker", "properties"]

  # Property workers - lines
  line_scan_worker:
    build:
      context: .
      dockerfile: ./workers/properties/lines/line_scan_worker/${DOCKERFILE:-Dockerfile}
    image: properties/line_scan_worker:latest
    profiles: ["worker", "properties"]

  # Image processing workers
  rolling_ball:
    build:
      context: .
      dockerfile: ./workers/annotations/rolling_ball/Dockerfile
    image: annotations/rolling_ball:latest
    profiles: ["worker", "image-processing"]

  gaussian_blur:
    build:
      context: .
      dockerfile: ./workers/annotations/gaussian_blur/Dockerfile
    image: annotations/gaussian_blur:latest
    profiles: ["worker", "image-processing"]

  crop:
    build:
      context: .
      dockerfile: ./workers/annotations/crop/Dockerfile
    image: annotations/crop:latest
    profiles: ["worker", "image-processing"]

  histogram_matching:
    build:
      context: .
      dockerfile: ./workers/annotations/histogram_matching/Dockerfile
    image: annotations/histogram_matching:latest
    profiles: ["worker", "image-processing"]

  registration:
    build:
      context: .
      dockerfile: ./workers/annotations/registration/Dockerfile
    image: annotations/registration:latest
    profiles: ["worker", "image-processing"]

  h_and_e_deconvolution:
    build:
      context: .
      dockerfile: ./workers/annotations/h_and_e_deconvolution/Dockerfile
    image: annotations/h_and_e_deconvolution:latest
    profiles: ["worker", "image-processing"]
    depends_on:
      - image-processing-base

  # AI workers
  ai_analysis:
    build:
      context: .
      dockerfile: ./workers/annotations/ai_analysis/${DOCKERFILE:-Dockerfile}
    image: annotations/ai_analysis:latest
    profiles: ["worker", "ai"]

  # Sample workers
  sample_interface:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/sample_interface_worker/${DOCKERFILE:-Dockerfile}
    image: properties/sample_interface:latest
    profiles: ["sample"]

  # Test services
  blob_metrics_test:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/blob_metrics_worker/tests/Dockerfile_Test
    image: properties/blob_metrics:test
    depends_on:
      - blob_metrics
    profiles: ["test"]

  connect_time_lapse_test:
    build:
      context: .
      dockerfile: ./workers/annotations/connect_timelapse/tests/Dockerfile_Test
    image: annotations/connect_timelapse:test
    depends_on:
      - connect_time_lapse
    profiles: ["test"]

  connect_to_nearest_test:
    build:
      context: .
      dockerfile: ./workers/annotations/connect_to_nearest/tests/Dockerfile_Test
    image: annotations/connect_to_nearest:test
    depends_on:
      - connect_to_nearest
    profiles: ["test"]
      
  blob_intensity_test:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/blob_intensity_worker/tests/Dockerfile_Test
    image: properties/blob_intensity:test
    depends_on:
      - blob_intensity
    profiles: ["test"]

  blob_annulus_intensity_test:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/blob_annulus_intensity_worker/tests/Dockerfile_Test
    image: properties/blob_annulus_intensity:test
    depends_on:
      - blob_annulus_intensity
    profiles: ["test"]

  blob_random_forest_classifier:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/blob_random_forest_classifier/${DOCKERFILE:-Dockerfile}
    image: properties/blob_random_forest_classifier:latest
    profiles: ["worker", "properties"]

  blob_random_forest_classifier_test:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/blob_random_forest_classifier/tests/Dockerfile_Test
    image: properties/blob_random_forest_classifier:test
    profiles: ["test"]

  blob_point_count_test:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/blob_point_count_worker/tests/Dockerfile_Test
    image: properties/blob_point_count:test
    depends_on:
      - blob_point_count
    profiles: ["test"]

  point_metrics_test:
    build:
      context: .
      dockerfile: ./workers/properties/points/point_metrics_worker/tests/Dockerfile_Test
    image: properties/point_metrics:test
    depends_on:
      - point_metrics
    profiles: ["test"]

  point_intensity_test:
    build:
      context: .
      dockerfile: ./workers/properties/points/point_circle_intensity_worker/tests/Dockerfile_Test
    image: properties/point_intensity:test
    depends_on:
      - point_intensity
    profiles: ["test"]

  children_count_test:
    build:
      context: .
      dockerfile: ./workers/properties/connections/children_count_worker/tests/Dockerfile_Test
    image: properties/children_count:test
    depends_on:
      - children_count
    profiles: ["test"]

  parent_child_test:
    build:
      context: .
      dockerfile: ./workers/properties/connections/parent_child_worker/tests/Dockerfile_Test
    image: properties/parent_child:test
    depends_on:
      - parent_child
    profiles: ["test"]

  sample_interface_test:
    build:
      context: .
      dockerfile: ./workers/properties/blobs/sample_interface_worker/tests/Dockerfile_Test
    image: properties/sample_interface:test
    profiles: ["sampletest"]

  # Testing image processing workers
  h_and_e_deconvolution_test:
    build:
      context: .
      dockerfile: ./workers/annotations/h_and_e_deconvolution/tests/Dockerfile_Test
    image: annotations/h_and_e_deconvolution:test
    depends_on:
      - h_and_e_deconvolution
    profiles: ["test"]

  crop_test:
    build:
      context: .
      dockerfile: ./workers/annotations/crop/tests/Dockerfile_Test
    image: annotations/crop:test
    depends_on:
      - crop
    profiles: ["test"]

  gaussian_blur_test:
    build:
      context: .
      dockerfile: ./workers/annotations/gaussian_blur/tests/Dockerfile_Test
    image: annotations/gaussian_blur:test
    depends_on:
      - gaussian_blur
    profiles: ["test"]

  histogram_matching_test:
    build:
      context: .
      dockerfile: ./workers/annotations/histogram_matching/tests/Dockerfile_Test
    image: annotations/histogram_matching:test
    depends_on:
      - histogram_matching
    profiles: ["test"]

  rolling_ball_test:
    build:
      context: .
      dockerfile: ./workers/annotations/rolling_ball/tests/Dockerfile_Test
    image: annotations/rolling_ball:test
    depends_on:
      - rolling_ball
    profiles: ["test"]

  registration_test:
    build:
      context: .
      dockerfile: ./workers/annotations/registration/tests/Dockerfile_Test
    image: annotations/registration:test
    depends_on:
      - registration
    profiles: ["test"]
